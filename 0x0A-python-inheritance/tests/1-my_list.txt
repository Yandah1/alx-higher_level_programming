import unittest


class MyList(list):
    def print_sorted(self):
        sorted_list = sorted(self)
        print(sorted_list)


class MyListTestCase(unittest.TestCase):
    def test_print_sorted(self):
        my_list = MyList([5, 2, 8, 1, 9])
        expected_output = [1, 2, 5, 8, 9]

        # Redirect the standard output to a file-like object
        # to capture the printed output
        with CapturingOutput() as output:
            my_list.print_sorted()

        # Convert the captured output to a list of integers
        actual_output = [int(x) for x in output.captured_output.split()]

        self.assertEqual(actual_output, expected_output)


class CapturingOutput:
    def __enter__(self):
        import sys
        from io import StringIO
        self.old_stdout = sys.stdout
        sys.stdout = self.stdout = StringIO()
        return self

    def __exit__(self, *args):
        import sys
        self.captured_output = self.stdout.getvalue()
        sys.stdout = self.old_stdout


if __name__ == '__main__':
    unittest.main()
